// <auto-generated />
using System;
using EducacionalAPIConexaoDB.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EducacionalAPIConexaoDB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240207233253_AdicionandoControllerEmail")]
    partial class AdicionandoControllerEmail
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Aluno", b =>
                {
                    b.Property<int>("AlunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Educacional", b =>
                {
                    b.Property<int>("EducacionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CodInstituicao")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<int>("EducacionalCod")
                        .HasColumnType("int");

                    b.Property<string>("NomeInstituicao")
                        .HasColumnType("longtext");

                    b.HasKey("EducacionalId");

                    b.ToTable("Educacionais");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Email", b =>
                {
                    b.Property<int>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<string>("EmailPrincipal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailResponsavel")
                        .HasColumnType("longtext");

                    b.HasKey("EmailId");

                    b.HasIndex("AlunoId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Falta", b =>
                {
                    b.Property<int>("FaltaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<bool>("Atestado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ativa")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DiaFalta")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.HasKey("FaltaId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Faltas");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Turma", b =>
                {
                    b.Property<int>("TurmaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnoTurma")
                        .HasColumnType("int");

                    b.Property<string>("LetraTurma")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("SerieTurma")
                        .HasColumnType("int");

                    b.HasKey("TurmaId");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Aluno", b =>
                {
                    b.HasOne("EducacionalAPIConexaoDB.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Email", b =>
                {
                    b.HasOne("EducacionalAPIConexaoDB.Models.Aluno", "Aluno")
                        .WithMany("Email")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Falta", b =>
                {
                    b.HasOne("EducacionalAPIConexaoDB.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EducacionalAPIConexaoDB.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Aluno", b =>
                {
                    b.Navigation("Email");
                });

            modelBuilder.Entity("EducacionalAPIConexaoDB.Models.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
